{"ast":null,"code":"import _slicedToArray from\"/Users/jeff/Desktop/weather_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./Forecast.css\";import ForecastDay from\"./ForecastDay\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Forecast(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loaded=_useState2[0],setLoaded=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),forecastData=_useState4[0],setForecastData=_useState4[1];useEffect(function(){setLoaded(false);},[props.coordinates]);function handleResponse(response){setForecastData(response.data.daily);setLoaded(true);}if(loaded){return/*#__PURE__*/_jsx(\"div\",{className:\"Forecast\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:forecastData.map(function(dailyForecast,index){if(index<5){return/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(ForecastDay,{data:dailyForecast})},index);}else{return null;}})})});}else{var apiKey=\"51ac8c007be10df8c6279a4b5212951e\";var longitude=props.coordinates.lon;var latitude=props.coordinates.lat;var apiUrl=\"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(latitude,\"&lon=\").concat(longitude,\"&appid=\").concat(apiKey,\"&units=metric\");axios.get(apiUrl).then(handleResponse);return null;}}","map":{"version":3,"sources":["/Users/jeff/Desktop/weather_react/src/Forecast.js"],"names":["React","useState","useEffect","ForecastDay","axios","Forecast","props","loaded","setLoaded","forecastData","setForecastData","coordinates","handleResponse","response","data","daily","map","dailyForecast","index","apiKey","longitude","lon","latitude","lat","apiUrl","get","then"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,cAAe,SAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACtC,cAA0BL,QAAQ,CAAC,KAAD,CAAlC,wCAAKM,MAAL,eAAaC,SAAb,eACA,eAAsCP,QAAQ,CAAC,IAAD,CAA9C,yCAAKQ,YAAL,eAAmBC,eAAnB,eAEAR,SAAS,CAAC,UAAM,CACdM,SAAS,CAAC,KAAD,CAAT,CACD,CAFQ,CAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT,CAIA,QAASC,CAAAA,cAAT,CAAwBC,QAAxB,CAAkC,CAChCH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAf,CACAP,SAAS,CAAC,IAAD,CAAT,CACD,CAED,GAAID,MAAJ,CAAY,CACV,mBACE,YAAK,SAAS,CAAC,UAAf,uBACE,YAAK,SAAS,CAAC,KAAf,UACGE,YAAY,CAACO,GAAb,CAAiB,SAAUC,aAAV,CAAyBC,KAAzB,CAAgC,CAChD,GAAIA,KAAK,CAAG,CAAZ,CAAe,CACb,mBACE,YAAK,SAAS,CAAC,KAAf,uBACE,KAAC,WAAD,EAAa,IAAI,CAAED,aAAnB,EADF,EAA0BC,KAA1B,CADF,CAKD,CAND,IAMO,CACL,MAAO,KAAP,CACD,CACF,CAVA,CADH,EADF,EADF,CAiBD,CAlBD,IAkBO,CACL,GAAIC,CAAAA,MAAM,CAAG,kCAAb,CACA,GAAIC,CAAAA,SAAS,CAAGd,KAAK,CAACK,WAAN,CAAkBU,GAAlC,CACA,GAAIC,CAAAA,QAAQ,CAAGhB,KAAK,CAACK,WAAN,CAAkBY,GAAjC,CACA,GAAIC,CAAAA,MAAM,+DAA0DF,QAA1D,iBAA0EF,SAA1E,mBAA6FD,MAA7F,iBAAV,CACAf,KAAK,CAACqB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBd,cAAvB,EAEA,MAAO,KAAP,CACD,CACF","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Forecast.css\";\nimport ForecastDay from \"./ForecastDay\";\n\nimport axios from \"axios\";\n\nexport default function Forecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecastData, setForecastData] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecastData(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"Forecast\">\n        <div className=\"row\">\n          {forecastData.map(function (dailyForecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                  <ForecastDay data={dailyForecast} />\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    let apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}