{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/weather_react/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport WeatherDisplay from \"./WeatherDisplay\";\nimport Forecast from \"./Forecast\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherApp(props) {\n  _s();\n\n  const [city, setCity] = useState(props.defaultCity);\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      description: response.data.weather[0].description,\n      wind: Math.round(response.data.wind.speed),\n      humidity: Math.round(response.data.main.humidity),\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      time: new Date(response.data.dt * 1000),\n      icon: response.data.weather[0].icon,\n      temperature: Math.round(response.data.main.temp),\n      sunrise: new Date(response.data.sys.sunrise * 1000),\n      sunset: new Date(response.data.sys.sunset * 1000)\n    });\n  }\n\n  function search() {\n    let apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCitySearch(event) {\n    setCity(event.target.value);\n  }\n\n  function showCurrentLocation(position) {\n    let lat = position.coord.lat;\n    let lon = position.coord.lon;\n    let apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(weatherData);\n  }\n\n  function currentLocation(event) {\n    event.preventDefault();\n    navigator.geolocation.showCurrentLocation(currentLocation);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"\",\n            id: \"search-text-input\",\n            autoFocus: \"on\",\n            onChange: handleCitySearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"search-button\",\n            type: \"image\",\n            name: \"submit\",\n            src: \"images/SEARCH.png\",\n            alt: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"current-location-button\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"current-location-button-image\",\n              src: \"images/PIN.png\",\n              alt: \"\" // onClick={fetchLocation}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n          data: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n          coordinates: weatherData.coordinates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n\n_s(WeatherApp, \"fD9KFQzKk7+2HoON3k+ywG5+OGs=\");\n\n_c = WeatherApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["/Users/jeff/Desktop/weather_react/src/Weather.js"],"names":["React","useState","WeatherDisplay","Forecast","axios","WeatherApp","props","city","setCity","defaultCity","weatherData","setWeatherData","ready","handleResponse","response","coordinates","data","coord","description","weather","wind","Math","round","speed","humidity","main","name","date","Date","dt","time","icon","temperature","temp","sunrise","sys","sunset","search","apiKey","apiUrl","get","then","handleSubmit","event","preventDefault","handleCitySearch","target","value","showCurrentLocation","position","lat","lon","currentLocation","navigator","geolocation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACK,KAAK,CAACG,WAAP,CAAhC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC;AAAEW,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9C;;AAEA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCH,IAAAA,cAAc,CAAC;AACbC,MAAAA,KAAK,EAAE,IADM;AAEbG,MAAAA,WAAW,EAAED,QAAQ,CAACE,IAAT,CAAcC,KAFd;AAGbC,MAAAA,WAAW,EAAEJ,QAAQ,CAACE,IAAT,CAAcG,OAAd,CAAsB,CAAtB,EAAyBD,WAHzB;AAIbE,MAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWR,QAAQ,CAACE,IAAT,CAAcI,IAAd,CAAmBG,KAA9B,CAJO;AAKbC,MAAAA,QAAQ,EAAEH,IAAI,CAACC,KAAL,CAAWR,QAAQ,CAACE,IAAT,CAAcS,IAAd,CAAmBD,QAA9B,CALG;AAMbjB,MAAAA,IAAI,EAAEO,QAAQ,CAACE,IAAT,CAAcU,IANP;AAObC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASd,QAAQ,CAACE,IAAT,CAAca,EAAd,GAAmB,IAA5B,CAPO;AAQbC,MAAAA,IAAI,EAAE,IAAIF,IAAJ,CAASd,QAAQ,CAACE,IAAT,CAAca,EAAd,GAAmB,IAA5B,CARO;AASbE,MAAAA,IAAI,EAAEjB,QAAQ,CAACE,IAAT,CAAcG,OAAd,CAAsB,CAAtB,EAAyBY,IATlB;AAUbC,MAAAA,WAAW,EAAEX,IAAI,CAACC,KAAL,CAAWR,QAAQ,CAACE,IAAT,CAAcS,IAAd,CAAmBQ,IAA9B,CAVA;AAWbC,MAAAA,OAAO,EAAE,IAAIN,IAAJ,CAASd,QAAQ,CAACE,IAAT,CAAcmB,GAAd,CAAkBD,OAAlB,GAA4B,IAArC,CAXI;AAYbE,MAAAA,MAAM,EAAE,IAAIR,IAAJ,CAASd,QAAQ,CAACE,IAAT,CAAcmB,GAAd,CAAkBC,MAAlB,GAA2B,IAApC;AAZK,KAAD,CAAd;AAcD;;AAED,WAASC,MAAT,GAAkB;AAChB,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,MAAM,GAAI,qDAAoDhC,IAAK,UAAS+B,MAAO,eAAvF;AACAlC,IAAAA,KAAK,CAACoC,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuB5B,cAAvB;AACD;;AAED,WAAS6B,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,MAAM;AACP;;AAED,WAASQ,gBAAT,CAA0BF,KAA1B,EAAiC;AAC/BnC,IAAAA,OAAO,CAACmC,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;AACD;;AAED,WAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AACrC,QAAIC,GAAG,GAAGD,QAAQ,CAAChC,KAAT,CAAeiC,GAAzB;AACA,QAAIC,GAAG,GAAGF,QAAQ,CAAChC,KAAT,CAAekC,GAAzB;AACA,QAAIb,MAAM,GAAG,kCAAb;AACA,QAAIC,MAAM,GAAI,uDAAsDW,GAAI,QAAOC,GAAI,UAASb,MAAO,eAAnG;AACAlC,IAAAA,KAAK,CAACoC,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuB/B,WAAvB;AACD;;AAED,WAAS0C,eAAT,CAAyBT,KAAzB,EAAgC;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAS,IAAAA,SAAS,CAACC,WAAV,CAAsBN,mBAAtB,CAA0CI,eAA1C;AACD;;AAED,MAAI1C,WAAW,CAACE,KAAhB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAM,UAAA,QAAQ,EAAE8B,YAAhB;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,WAAW,EAAC,EAFd;AAGE,YAAA,EAAE,EAAC,mBAHL;AAIE,YAAA,SAAS,EAAC,IAJZ;AAKE,YAAA,QAAQ,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AACE,YAAA,EAAE,EAAC,eADL;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,GAAG,EAAC,mBAJN;AAKE,YAAA,GAAG,EAAC;AALN;AAAA;AAAA;AAAA;AAAA,kBATF,eAiBE;AAAQ,YAAA,EAAE,EAAC,yBAAX;AAAA,mCACE;AACE,cAAA,EAAE,EAAC,+BADL;AAEE,cAAA,GAAG,EAAC,gBAFN;AAGE,cAAA,GAAG,EAAC,EAHN,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA2BE;AAAA;AAAA;AAAA;AAAA,gBA3BF,eA6BE,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAEnC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBA7BF,eA+BE,QAAC,QAAD;AAAU,UAAA,WAAW,EAAEA,WAAW,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,gBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAsCD,GAvCD,MAuCO;AACLsB,IAAAA,MAAM;AACN,WAAO,YAAP;AACD;AACF;;GA5FuBhC,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport WeatherDisplay from \"./WeatherDisplay\";\nimport Forecast from \"./Forecast\";\n\n\nimport axios from \"axios\";\n\nexport default function WeatherApp(props) {\n  const [city, setCity] = useState(props.defaultCity);\n  const [weatherData, setWeatherData] = useState({ ready: false });\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      description: response.data.weather[0].description,\n      wind: Math.round(response.data.wind.speed),\n      humidity: Math.round(response.data.main.humidity),\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      time: new Date(response.data.dt * 1000),\n      icon: response.data.weather[0].icon,\n      temperature: Math.round(response.data.main.temp),\n      sunrise: new Date(response.data.sys.sunrise * 1000),\n      sunset: new Date(response.data.sys.sunset * 1000),\n    });\n  }\n\n  function search() {\n    let apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCitySearch(event) {\n    setCity(event.target.value);\n  }\n\n  function showCurrentLocation(position) {\n    let lat = position.coord.lat;\n    let lon = position.coord.lon;\n    let apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(weatherData);\n  }\n\n  function currentLocation(event) {\n    event.preventDefault();\n    navigator.geolocation.showCurrentLocation(currentLocation);\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"weather-app\">\n        <div className=\"col-search\">\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"search\"\n              placeholder=\"\"\n              id=\"search-text-input\"\n              autoFocus=\"on\"\n              onChange={handleCitySearch}\n            />\n\n            <input\n              id=\"search-button\"\n              type=\"image\"\n              name=\"submit\"\n              src=\"images/SEARCH.png\"\n              alt=\"Submit\"\n            />\n\n            <button id=\"current-location-button\">\n              <img\n                id=\"current-location-button-image\"\n                src=\"images/PIN.png\"\n                alt=\"\"\n                // onClick={fetchLocation}\n              />\n            </button>\n          </form>\n          <br />\n\n          <WeatherDisplay data={weatherData} />\n\n          <Forecast coordinates={weatherData.coordinates} />\n         \n        </div>\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}