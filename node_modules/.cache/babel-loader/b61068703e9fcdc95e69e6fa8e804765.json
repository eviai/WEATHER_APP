{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/weather_react/src/UnitConversion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UnitConversion(props) {\n  _s();\n\n  const [unit, setUnit] = useState(\"celsius\");\n\n  function showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  function showCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n  }\n\n  if (unit === \"celsius\") {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tempFormat\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: Math.round(props.celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          id: \"celsius-link\",\n          children: [\"\\xB0C\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"divider\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          id: \"fahrenheit-link\",\n          onClick: showFahrenheit,\n          children: \"\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else {\n    let fahrenheit = props.celsius * 9 / 5 + 32;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tempFormat\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: Math.round(fahrenheit)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          id: \"celsius-link\",\n          onClick: showCelsius,\n          children: [\"\\xB0C\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"divider\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          id: \"fahrenheit-link\",\n          children: \"\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(UnitConversion, \"n67kjtGMfKwprJ+mcpfrwxWUTPs=\");\n\n_c = UnitConversion;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnitConversion\");","map":{"version":3,"sources":["/Users/jeff/Desktop/weather_react/src/UnitConversion.js"],"names":["React","useState","UnitConversion","props","unit","setUnit","showFahrenheit","event","preventDefault","showCelsius","Math","round","celsius","fahrenheit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAAD,CAAhC;;AAEA,WAASK,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAAC,YAAD,CAAP;AACD;;AAED,WAASI,WAAT,CAAqBF,KAArB,EAA4B;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAAC,SAAD,CAAP;AACD;;AAED,MAAID,IAAI,KAAK,SAAb,EAAwB;AACtB,wBACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,8BACE;AAAA,kBAAOM,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACS,OAAjB;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,EAAE,EAAC,cAAf;AAAA,8BACK,GADL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAIqC,GAJrC,eAKE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,EAAE,EAAC,iBAAf;AAAiC,UAAA,OAAO,EAAEN,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD,MAcO;AACL,QAAIO,UAAU,GAAIV,KAAK,CAACS,OAAN,GAAgB,CAAjB,GAAsB,CAAtB,GAA0B,EAA3C;AACA,wBACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,8BACE;AAAA,kBAAOF,IAAI,CAACC,KAAL,CAAWE,UAAX;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,mBACG,GADH,eAEE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,EAAE,EAAC,cAAf;AAA8B,UAAA,OAAO,EAAEJ,WAAvC;AAAA,8BACK,GADL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAKqC,GALrC,eAME;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,EAAE,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;AACF;;GA7CuBP,c;;KAAAA,c","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function UnitConversion(props) {\n  const [unit, setUnit] = useState(\"celsius\");\n\n  function showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  function showCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n  }\n\n  if (unit === \"celsius\") {\n    return (\n      <span className=\"tempFormat\">\n        <span>{Math.round(props.celsius)}</span>\n        <span className=\"unit\">\n          <a href=\"/\" id=\"celsius-link\">\n            째C{\" \"}\n          </a>\n          <span className=\"divider\">|</span>{\" \"}\n          <a href=\"/\" id=\"fahrenheit-link\" onClick={showFahrenheit}>째F\n          </a>\n        </span>\n      </span>\n    );\n  } else {\n    let fahrenheit = (props.celsius * 9) / 5 + 32;\n    return (\n      <span className=\"tempFormat\">\n        <span>{Math.round(fahrenheit)}</span>\n        <span className=\"unit\">\n          {\" \"}\n          <a href=\"/\" id=\"celsius-link\" onClick={showCelsius}>\n            째C{\" \"}\n          </a>\n          <span className=\"divider\">|</span>{\" \"}\n          <a href=\"/\" id=\"fahrenheit-link\">\n            째F\n          </a>\n        </span>\n      </span>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}