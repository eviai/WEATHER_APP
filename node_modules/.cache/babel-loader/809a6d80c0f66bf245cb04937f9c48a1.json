{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/weather_react/src/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Forecast.css\";\nimport ForecastDay from \"./ForecastDay\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecastData, setForecastData] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecastData(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecastData.map(function (dailyForecast, index) {\n          if (index < 5) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(ForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(Forecast, \"UqrITLApisbjHQuJVHpCpDumyw8=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/jeff/Desktop/weather_react/src/Forecast.js"],"names":["React","useState","useEffect","ForecastDay","axios","Forecast","props","loaded","setLoaded","forecastData","setForecastData","coordinates","handleResponse","response","data","daily","map","dailyForecast","index","apiKey","longitude","lon","latitude","lat","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCH,IAAAA,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAf;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAY;AAGV,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGE,YAAY,CAACO,GAAb,CAAiB,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;AAChD,cAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,gCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACE,QAAC,WAAD;AAAa,gBAAA,IAAI,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,eAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD;AACF,SARA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAlBD,MAkBO;AACL,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,SAAS,GAAGd,KAAK,CAACK,WAAN,CAAkBU,GAAlC;AACA,QAAIC,QAAQ,GAAGhB,KAAK,CAACK,WAAN,CAAkBY,GAAjC;AACA,QAAIC,MAAM,GAAI,uDAAsDF,QAAS,QAAOF,SAAU,UAASD,MAAO,eAA9G;AACAf,IAAAA,KAAK,CAACqB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBd,cAAvB;AAEA,WAAO,IAAP;AACD;AACF;;GAxCuBP,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Forecast.css\";\nimport ForecastDay from \"./ForecastDay\";\n\nimport axios from \"axios\";\n\nexport default function Forecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecastData, setForecastData] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecastData(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n\n\n    return (\n      <div className=\"Forecast\">\n        <div className=\"row\">\n          {forecastData.map(function (dailyForecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                  <ForecastDay data={dailyForecast} />\n                </div>\n              );\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    let apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}