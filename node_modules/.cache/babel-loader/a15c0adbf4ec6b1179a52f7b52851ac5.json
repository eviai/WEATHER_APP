{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/weather_react/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport WeatherDisplay from \"./WeatherDisplay\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherApp(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      description: response.data.weather[0].description,\n      wind: Math.round(response.data.wind.speed),\n      humidity: Math.round(response.data.main.humidity),\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      time: new Date(),\n      icon: response.data.weather[0].icon,\n      temperature: Math.round(response.data.main.temp)\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  function handleCitySearch(event) {\n    setCity(event.target.value);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"search-location-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\",\n            id: \"search-text-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"search-button\",\n            type: \"image\",\n            name: \"submit\",\n            src: \"images/SEARCH.png\",\n            alt: \"Submit\",\n            onSearch: \"handleCitySearch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"current-location-button\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"current-location-button-image\",\n              src: \"images/CURRENT_LOCATION.png\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n          data: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  } else {\n    const apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading...\";\n  }\n}\n\n_s(WeatherApp, \"dsaBKiCPm9xAtefQhlJvmvwFSHU=\");\n\n_c = WeatherApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["/Users/jeff/Desktop/weather_react/src/Weather.js"],"names":["React","useState","WeatherDisplay","axios","WeatherApp","props","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","description","data","weather","wind","Math","round","speed","humidity","main","name","date","Date","dt","time","icon","temperature","temp","handleSubmit","event","preventDefault","handleCitySearch","target","value","apiKey","apiUrl","get","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport WeatherDisplay from \"./WeatherDisplay\";\nimport axios from \"axios\";\n\nexport default function WeatherApp(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      description: response.data.weather[0].description,\n      wind: Math.round(response.data.wind.speed),\n      humidity: Math.round(response.data.main.humidity),\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      time: new Date(),\n      icon: response.data.weather[0].icon,\n      temperature: Math.round(response.data.main.temp),\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n  }\n\n  function handleCitySearch(event)\n  {\n    setCity(event.target.value);\n\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"weather-app\">\n        <div className=\"col-search\">\n          <form id=\"search-location-form\" onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"\" id=\"search-text-input\" />\n\n            <input\n        \n              id=\"search-button\"\n              type=\"image\"\n              name=\"submit\"\n              src=\"images/SEARCH.png\"\n              alt=\"Submit\"\n              onSearch=\"handleCitySearch\"\n            />\n\n            <button id=\"current-location-button\">\n              <img\n                id=\"current-location-button-image\"\n                src=\"images/CURRENT_LOCATION.png\"\n                alt=\"\"\n              />\n            </button>\n          </form>\n          <br />\n\n          <WeatherDisplay data={weatherData}/>\n        </div>\n      </div>\n    );\n  } else {\n    const apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return \"Loading...\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}