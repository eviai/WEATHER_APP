{"version":3,"sources":["FormattedDate.js","FormattedTime.js","WeatherIcon.js","UnitConversion.js","SunriseSunset.js","WeatherDisplay.js","ForecastDay.js","Forecast.js","Weather.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["FormattedDay","props","day","date","getDay","FormattedTime","time","Date","hours","getHours","minutes","getMinutes","WeatherIcon","src","code","alt","UnitConversion","useState","unit","setUnit","id","Math","round","celsius","className","href","onClick","event","preventDefault","fahrenheit","SunriseSunset","display","data","city","description","humidity","wind","sunrise","sunset","icon","decription","temperature","ForecastDay","weather","dt","temp","max","maxTemp","min","minTemp","Forecast","loaded","setLoaded","forecastData","setForecastData","useEffect","coordinates","map","dailyForecast","index","longitude","lon","latitude","lat","apiUrl","axios","get","then","response","daily","WeatherApp","defaultCity","setCity","ready","weatherData","setWeatherData","handleResponse","coord","speed","main","name","sys","search","currentLocation","position","coords","onSubmit","type","placeholder","autoFocus","onChange","target","value","navigator","geolocation","getCurrentPosition","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d7d0789.chunk.js","sourcesContent":["export default function FormattedDay(props) {\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  let day = days[props.date.getDay()];\n  return `${day}`;\n}\n","export default function FormattedTime() {\n  let time = new Date();\n  let hours = time.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  let minutes = time.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  return `${hours}:${minutes}`;\n}","import React from \"react\";\nimport \"./styles.css\";\n\nexport default function WeatherIcon(props) {\n  const codeMapping = {\n    \"01d\": \"SUN\",\n    \"01n\": \"MOON\",\n    \"02d\": \"SUN_CLOUD\",\n    \"02n\": \"MOON_CLOUD\",\n    \"03d\": \"CLOUD\",\n    \"03n\": \"CLOUD\",\n    \"04d\": \"SUPER_CLOUD\",\n    \"04n\": \"MOON_CLOUD\",\n    \"09d\": \"LIGHT_RAIN\",\n    \"09n\": \"MOON_LIGHT_RAIN\",\n    \"10d\": \"HEAVY_RAIN\",\n    \"10n\": \"MOON_HEAVY_RAIN\",\n    \"11d\": \"STORM\",\n    \"11n\": \"MOON_STORM\",\n    \"13d\": \"SNOW\",\n    \"13n\": \"MOON_SNOW\",\n  };\n\n  return (\n    <div>\n      <img src={\"images/\" + codeMapping[props.code] + \".png\"} alt=\"main-icon\" />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function UnitConversion(props) {\n  const [unit, setUnit] = useState(\"celsius\");\n\n  function showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  function showCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n  }\n\n  if (unit === \"celsius\") {\n    return (\n      <span>\n        <span id=\"temperature\">{Math.round(props.celsius)}</span>\n        <span className=\"unit\">\n          <a href=\"/\" id=\"celsius-link\">\n            째C\n          </a>\n          <span className=\"divider\">|</span>\n          <a href=\"/\" id=\"fahrenheit-link\" onClick={showFahrenheit}>\n            째F\n          </a>\n        </span>\n      </span>\n    );\n  } else {\n    let fahrenheit = (props.celsius * 9) / 5 + 32;\n    return (\n      <span>\n        <span id=\"temperature\">{Math.round(fahrenheit)}</span>\n        <span className=\"unit\">\n          <a href=\"/\" id=\"celsius-link\" onClick={showCelsius}>\n            째C\n          </a>\n          <span className=\"divider\">|</span>\n          <a href=\"/\" id=\"fahrenheit-link\">\n            째F\n          </a>\n        </span>\n      </span>\n    );\n  }\n}\n","export default function SunriseSunset(props) {\n    let hours = props.date.getHours();\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n    let minutes = props.date.getMinutes();\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n  \n    return `${hours}:${minutes}`;\n  }","import React from \"react\";\nimport FormattedDate from \"./FormattedDate\";\nimport FormattedTime from \"./FormattedTime\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport UnitConversion from \"./UnitConversion\";\nimport SunriseSunset from \"./SunriseSunset\";\n\nexport default function display(props) {\n  return (\n    <div className=\"cityTimeData\">\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <h2 id=\"city\">{props.data.city}</h2>\n          <h5 id=\"weather-description\">{props.data.description}</h5>\n          <ul>\n            <li>\n              <img\n                id=\"weather-conditions-icons\"\n                src=\"images/HUMIDITY.png\"\n                alt=\"humidity-icon\"\n              />\n            </li>\n            <li>{props.data.humidity}%</li>\n            <li>\n              <img\n                id=\"weather-conditions-icons\"\n                src=\"images/WIND.png\"\n                alt=\"wind-icon\"\n              />\n            </li>\n            <li>{props.data.wind} Km/h</li>\n          </ul>\n        </div>\n        <div className=\"col-6\">\n          <h1 id=\"current-day-time\">\n            <FormattedDate date={props.data.date} />\n          </h1>\n          <strong id=\"current-time\">\n            <FormattedTime date={props.data.time} />\n          </strong>\n          <li id=\"sunrise\">\n            <img\n              id=\"weather-conditions-icons\"\n              src=\"images/SUNRISE.png\"\n              alt=\"sunrise-icon\"\n            />\n            <br />\n            <br />\n            <br />\n          </li>\n          <li id=\"sunrise-time\">\n            <SunriseSunset date={props.data.sunrise} />\n          </li>\n          <br />\n          <li id=\"sunset\">\n            <img id=\"sunrise-icon\" src=\"images/SUNSET.png\" alt=\"sunset-icon\" />\n            <br />\n            <br />\n          </li>\n          <li id=\"sunset-time\">\n            <SunriseSunset date={props.data.sunset} />\n          </li>\n        </div>\n      </div>\n\n      <div id=\"main-icon\">\n        <WeatherIcon code={props.data.icon} alt={props.data.decription} />\n      </div>\n\n      <div id=\"temp-format\">\n        <UnitConversion celsius={props.data.temperature} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"./Forecast.css\";\n\nexport default function ForecastDay(props) {\n  function maxTemp() {\n    let temperature = Math.round(props.data.temp.max);\n    return `${temperature}째`;\n  }\n  function minTemp() {\n    let temperature = Math.round(props.data.temp.min);\n    return `${temperature}째`;\n  }\n\n  function day() {\n    let date = new Date(props.data.dt * 1000);\n    let day = date.getDay();\n\n    let days = [\"SUN\", \"MON\", \"TUES\", \"WEDS\", \"THURS\", \"FRI\", \"SAT\"];\n\n    return days[day];\n  }\n\n  return (\n    <div className=\"forecast-day\">\n      <WeatherIcon code={props.data.weather[0].icon} />\n      <div className=\"forecast-daily\">{day()}</div>\n\n      <div className=\"forecast-temp\">\n        <span className=\"forecast-max-temp\">{maxTemp()}</span>\n        <span className=\"forecast-min-temp\">{minTemp()}</span>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./Forecast.css\";\nimport ForecastDay from \"./ForecastDay\";\n\nimport axios from \"axios\";\n\nexport default function Forecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecastData, setForecastData] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecastData(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"Forecast\">\n        <div className=\"row\">\n          {forecastData.map(function (dailyForecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                  <ForecastDay data={dailyForecast} />\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    let apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return null;\n  }\n}\n","import React, { useState } from \"react\";\nimport WeatherDisplay from \"./WeatherDisplay\";\nimport Forecast from \"./Forecast\";\n\nimport axios from \"axios\";\n\nexport default function WeatherApp(props) {\n  const [city, setCity] = useState(props.defaultCity);\n  const [weatherData, setWeatherData] = useState({ ready: false });\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      description: response.data.weather[0].description,\n      wind: Math.round(response.data.wind.speed),\n      humidity: Math.round(response.data.main.humidity),\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      time: new Date(response.data.dt * 1000),\n      icon: response.data.weather[0].icon,\n      temperature: Math.round(response.data.main.temp),\n      sunrise: new Date(response.data.sys.sunrise * 1000),\n      sunset: new Date(response.data.sys.sunset * 1000),\n    });\n  }\n\n  function search() {\n    let apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCitySearch(event) {\n    setCity(event.target.value);\n  }\n\n  function currentLocation(position) {\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    let apiKey = \"51ac8c007be10df8c6279a4b5212951e\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  function showCurrentLocation(event) {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(currentLocation);\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"weather-app\">\n        <div className=\"col-search\">\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"search\"\n              placeholder=\"\"\n              id=\"search-text-input\"\n              autoFocus=\"on\"\n              onChange={handleCitySearch}\n            />\n\n            <input\n              id=\"search-button\"\n              type=\"image\"\n              name=\"submit\"\n              src=\"images/SEARCH.svg\"\n              alt=\"Submit\"\n            />\n\n            <button id=\"current-location-button\">\n              <img\n                id=\"current-location-button-image\"\n                src=\"images/CURRENT_LOCATION.svg\"\n                alt=\"\"\n                onClick={showCurrentLocation}\n              />\n            </button>\n          </form>\n          <br />\n\n          <WeatherDisplay data={weatherData} />\n\n          <Forecast coordinates={weatherData.coordinates} />\n        </div>\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <div className=\"footerText\">\n      <h4>\n      <a href=\"https://github.com/eviai/weather_react.git\" target=\"blank\">Open source</a> code by\n        <a href=\"https://instagram.com/ev___ai\" target=\"blank\">\n          {\" \"}Emily May\n        </a>\n      </h4>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport \"./Forecast.css\";\nimport Weather from \"./Weather\";\nimport Footer from \"./Footer\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"wrapper border weather-app col\">\n          <div className=\"col-search\">\n            <Weather defaultCity=\"London\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}